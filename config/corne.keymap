/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q               &kp W             &kp E               &kp R           &kp T          &kp Y                    &kp U           &kp I               &kp O             &kp P                       &none
&none  &mt LEFT_CONTROL A  &mt LEFT_SHIFT S  &mt LEFT_COMMAND D  &mt LEFT_ALT F  &kp G          &kp H                    &mt LEFT_ALT J  &mt LEFT_COMMAND K  &mt LEFT_SHIFT L  &mt LEFT_CONTROL SEMICOLON  &none
&none  &kp Z               &kp X             &kp C               &kp V           &kp B          &kp N                    &kp M           &kp COMMA           &kp DOT           &kp SLASH                   &none
                                             &none               &lt 1 LC(B)     &lt 3 ENTER    &mt RIGHT_COMMAND SPACE  &lt 2 TAB       &none
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp TAB               &none      &kp LG(LS(SPACE))  &kp LG(LS(J))  &none            &none          &kp N7        &kp N8        &kp N9        &none  &none
&none  &kp LA(SPACE)         &kp LA(O)  &kp LA(J)          &kp LC(B)      &kp LG(GRAVE)    &none          &kp NUMBER_4  &kp N5        &kp N6        &none  &none
&none  &kp LS(RG(NUMBER_4))  &none      &kp LS(LG(C))      &kp LS(LG(V))  &mo 3            &none          &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none  &none
                                        &none              &none          &none            &kp LA(SPACE)  &kp NUMBER_0  &none
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL     &kp AT      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE            &kp EQUAL       &kp PLUS              &kp MINUS             &kp UNDERSCORE         &kp STAR       &none
&none  &kp HASH     &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE           &kp LEFT_ARROW  &kp DOWN              &kp UP_ARROW          &kp RIGHT              &kp BACKSPACE  &none
&none  &kp PERCENT  &kp CARET   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE           &kp AMPERSAND   &kp NON_US_BACKSLASH  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &none          &none
                                &kp LEFT_WIN          &kp LALT               &kp LG(KP_ENTER)    &none           &none                 &none
            >;
        };

        layer_3 {
            bindings = <
&none  &none  &none  &none  &none  &none    &bt BT_CLR  &kp F7  &kp F8  &kp F9  &kp F10  &none
&none  &none  &none  &none  &none  &none    &bt BT_PRV  &kp F4  &kp F5  &kp F6  &kp F11  &none
&none  &none  &none  &none  &none  &none    &bt BT_NXT  &kp F1  &kp F2  &kp F3  &kp F12  &none
                     &none  &none  &none    &none       &none   &none
            >;
        };
    };
};
